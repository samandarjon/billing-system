{"version":3,"sources":["utils/setAuthToken.js","validation/is-empty.js","actions/types.js","reducers/authReducer.js","reducers/productReducer.js","reducers/orderReducer.js","reducers/errorReducer.js","reducers/fileReducer.js","reducers/billingPricesReducer.js","reducers/index.js","store.js","actions/authActions.js","components/layout/NavbarItems.js","components/layout/Navbar.js","components/comman/TextFieldGroup.js","components/auth/Login.js","actions/productActions.js","components/seller/icon.png","components/seller/ComponentToPrint.js","components/seller/SellerView.js","actions/orderAction.js","components/comman/PrivateRoute.js","components/product/Product.js","components/product/UpdateProduct.js","actions/taxActions.js","components/product/AddProduct.js","components/billing/Billing.js","App.js","reportWebVitals.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","isEmpty","value","undefined","Object","keys","length","trim","CLEAR_ERRORS","GET_ERRORS","SET_CURRENT_USER","GET_PRODUCTS","GET_PRODUCT","GET_ORDERS","GET_ORDER","GET_FILE","GET_PRODUCT_TAX","GET_TAX","initialState","isAuthenticated","user","products","product","orders","order","productTax","taxes","combineReducers","auth","state","action","type","payload","errors","tax","file","middleware","thunk","enhancer","composeEnhancers","compose","applyMiddleware","store","createStore","rootReducer","setCurrentUser","decode","logoutUser","dispatch","localStorage","removeItem","clearCurrentProfile","navItems","ROLE_ADMIN","path","name","ROLE_SELLER","ROLE_MANAGER","GUEST","Navbar","e","preventDefault","this","props","items","console","log","authLink","className","role","roleName","map","item","to","onClick","onLogoutClick","bind","guestLink","data-toggle","data-target","id","Component","connect","TextFieldGroup","placeholder","error","label","info","onChange","disabled","required","classnames","defaultProps","Login","username","password","onSubmit","history","push","nextProps","nextContext","setState","userData","loginUser","target","message","post","then","res","data","setItem","jwt_decode","catch","err","response","getProduct","page","get","ComponentToPrint","list","summ","src","img","alt","Date","toLocaleString","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","index","scope","price","quantity","toFixed","PureComponent","SellerView","handleChange","term","show","getProductWithTerm","parseFloat","splice","f","orderDto","forEach","productId","amount","getInvoice","findItems","_embedded","p","onClickProduct","ref","el","componentRef","event","clear","TextField","IconButton","search","step","onQuantityChange","Button","addToOrder","variant","color","content","handlePrint","print","onDeleteOrder","startIcon","rest","render","Product","pape","deleteProduct","row","onDeleteProduct","Pagination","defaultValue","count","totalPages","lign","delete","UpdateProduct","billingPrices","discount","getOneProduct","match","params","getTax","updateProduct","uri","href","_links","substring","update","put","AddProduct","newProduct","addProduct","Billing","start","toISOString","end","dates","getBilling","format","createAt","InputLabelProps","shrink","profit","jwtToken","decoded","currentTime","now","exp","window","location","App","exact","Order","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1012681e.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        // Apply to every request\r\n        axios.defaults.headers.common['Authorization'] = token;\r\n    } else {\r\n        // Delete auth header\r\n        delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n};\r\nexport default setAuthToken;","const isEmpty = (value) =>\r\n    value === undefined ||\r\n    value === null ||\r\n    (typeof value === 'object' && Object.keys(value).length === 0) ||\r\n    (typeof value === 'string' && value.trim().length === 0);\r\n\r\nexport default  isEmpty;","export const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\nexport const GET_PRODUCTS = \"GET_PRODUCTS\";\r\nexport const GET_PRODUCT = \"GET_PRODUCT\";\r\nexport const GET_ORDERS = \"GET_ORDERS\";\r\nexport const GET_ORDER = \"GET_ORDER\";\r\nexport const GET_FILE = \"GET_FILE\";\r\nexport const CLEAR_CURRENT_PROFILE = \"CLEAR_CURRENT_PROFILE\";\r\nexport const GET_PRODUCT_TAX = \"GET_PRODUCT_TAX\";\r\nexport const GET_TAX = \"GET_TAX\";","import isEmpty from '../validation/is-empty'\r\nimport {SET_CURRENT_USER} from '../actions/types';\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER: {\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {GET_PRODUCT, GET_PRODUCTS} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    products: null,\r\n    product: null\r\n};\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_PRODUCTS: {\r\n            return {\r\n                ...state,\r\n                products: action.payload\r\n            }\r\n        }\r\n        case GET_PRODUCT: {\r\n            return {\r\n                ...state,\r\n                product: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {GET_ORDER, GET_ORDERS} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    orders: null,\r\n    order: null\r\n};\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ORDERS: {\r\n            return {\r\n                ...state,\r\n                orders: action.payload\r\n            }\r\n        }\r\n        case GET_ORDER: {\r\n            return {\r\n                ...state,\r\n                order: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_ERRORS, CLEAR_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS: {\r\n            return action.payload;\r\n        }\r\n        case CLEAR_ERRORS: {\r\n            return {};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {GET_FILE} from \"../actions/types\";\r\n\r\nconst initialState = {};\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_FILE: {\r\n            return action.payload\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}","import {GET_PRODUCT_TAX, GET_TAX} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    productTax: null,\r\n    taxes: null\r\n};\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_PRODUCT_TAX: {\r\n            return {\r\n                ...state,\r\n                productTax: action.payload\r\n            }\r\n        }\r\n        case GET_TAX: {\r\n            return {\r\n                ...state,\r\n                taxes: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport productReducer from \"./productReducer\";\r\nimport orderReducer from \"./orderReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport fileReducer from \"./fileReducer\";\r\nimport billingPricesReducer from \"./billingPricesReducer\";\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    product: productReducer,\r\n    order: orderReducer,\r\n    errors: errorReducer,\r\n    tax: billingPricesReducer,\r\n    file: fileReducer,\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst composeEnhancers = compose;\r\n// typeof window === 'object' &&\r\n// window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n//     window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n//         // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n//     }) : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n    applyMiddleware(...middleware),\r\n    // other store enhancers if any\r\n);\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    enhancer\r\n);\r\n\r\nexport default store;","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport {CLEAR_CURRENT_PROFILE, GET_ERRORS, SET_CURRENT_USER} from \"./types\";\r\n\r\nexport const loginUser = (userData, history) => dispatch => {\r\n    axios\r\n        .post(\"/api/auth/login\", userData)\r\n        .then(res => {\r\n            // Save to Localstorge\r\n            const {token} = res.data;\r\n            // Set token to ls\r\n            localStorage.setItem(\"jwtToken\", token);\r\n            // Set token to Auth header\r\n            setAuthToken(token);\r\n            // Decode token to get user data\r\n            const decode = jwt_decode(token);\r\n            // Set current user\r\n            dispatch(setCurrentUser(decode));\r\n            if (decode.role[0].roleName === \"ROLE_ADMIN\") {\r\n                history.push(\"/billing\")\r\n            }\r\n            if (decode.role[0].roleName === \"ROLE_MANAGER\") {\r\n                history.push(\"/product\")\r\n            }\r\n            if (decode.role[0].roleName === \"ROLE_SELLER\") {\r\n                history.push(\"/seller\")\r\n            }\r\n\r\n        })\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\n// Set login in user\r\nexport const setCurrentUser = decode => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: decode\r\n    };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n    // Remove token from localStorage\r\n    localStorage.removeItem(\"jwtToken\");\r\n    // Remove auth header from future request\r\n    setAuthToken(false);\r\n    // Set current user to {} which will set isAuthenticated to false\r\n    dispatch(setCurrentUser({}));\r\n};\r\n\r\nexport const clearCurrentProfile = () => {\r\n    return {\r\n        type: CLEAR_CURRENT_PROFILE\r\n    };\r\n};\r\n","export const navItems = {\r\n    ROLE_ADMIN: [\r\n        {\r\n            path: \"/product\",\r\n            name: \"Products\"\r\n        },\r\n\r\n        {\r\n            path: \"/billing\",\r\n            name: \"Billing\"\r\n        }\r\n    ],\r\n    ROLE_SELLER: [],\r\n    ROLE_MANAGER: [\r\n        {\r\n            path: \"/product\",\r\n            name: \"Products\"\r\n        }\r\n    ],\r\n    GUEST: []\r\n\r\n}\r\n","import React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {clearCurrentProfile, logoutUser} from \"../../actions/authActions\";\r\nimport {navItems} from \"./NavbarItems\"\r\nimport isEmpty from \"../../validation/is-empty\";\r\n\r\nclass Navbar extends Component {\r\n    onLogoutClick(e) {\r\n        e.preventDefault();\r\n        this.props.clearCurrentProfile();\r\n        this.props.logoutUser();\r\n    }\r\n\r\n    render() {\r\n        const items = navItems;\r\n\r\n\r\n        const {isAuthenticated, user} = this.props.auth;\r\n        console.log(items)\r\n        const authLink =\r\n            (<ul className=\"navbar-nav ml-auto\">\r\n                    {\r\n                        items[isEmpty(user) ? \"GUEST\" : user.role[0].roleName].map(item =>\r\n                            (<li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to={item.path}>\r\n                                    {item.name}\r\n                                </Link>\r\n                            </li>)\r\n                        )}\r\n                    <li className=\"nav-item\">\r\n                        <button\r\n                            onClick={this.onLogoutClick.bind(this)}\r\n                            className=\"nav-link logout\"\r\n                        > Logout\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n            );\r\n        const guestLink = (\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/login\">\r\n                        Login\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        );\r\n        return (\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\">\r\n                <div className=\" container\">\r\n                    <span className=\"navbar-brand\">\r\n                        Supermarket\r\n                    </span>\r\n                    <button\r\n                        className=\"navbar-toggler\"\r\n                        type=\"button\"\r\n                        data-toggle=\"collapse\"\r\n                        data-target=\"#mobile-nav\"\r\n                    >\r\n                        <span className=\"navbar-toggler-icon\"/>\r\n                    </button>\r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n\r\n                        {isAuthenticated ? authLink : guestLink}\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nNavbar.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStatetoProps = state => ({\r\n    auth: state.auth\r\n});\r\nexport default connect(\r\n    mapStatetoProps,\r\n    {logoutUser, clearCurrentProfile}\r\n)(Navbar);\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextFieldGroup = ({\r\n                            name,\r\n                            placeholder,\r\n                            value,\r\n                            type,\r\n                            label,\r\n                            error,\r\n                            info,\r\n                            onChange,\r\n                            disabled,\r\n                            required\r\n                        }) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <input\r\n                type={type}\r\n                className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": error\r\n                })}\r\n                placeholder={placeholder}\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}\r\n                disabled={disabled}\r\n                required={required}/>\r\n            {info && <small className=\"form-text text-muted\">{info}</small>}\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextFieldGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string,\r\n    value: PropTypes.string.isRequired,\r\n    info: PropTypes.string,\r\n    error: PropTypes.string,\r\n    disabled: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired\r\n};\r\n\r\nTextFieldGroup.defaultProps = {\r\n    type: \"text\"\r\n};\r\nexport default TextFieldGroup;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport TextFieldGroup from \"../comman/TextFieldGroup\";\r\nimport {loginUser} from \"../../actions/authActions\";\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            errors: \"\"\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {user} = this.props.auth\r\n        if (this.props.auth.isAuthenticated) {\r\n            if (user.role[0].roleName === \"ROLE_ADMIN\") {\r\n                this.props.history.push(\"/billing\")\r\n            }\r\n            if (user.role[0].roleName === \"ROLE_MANAGER\") {\r\n                this.props.history.push(\"/product\")\r\n            }\r\n            if (user.role[0].roleName === \"ROLE_SELLER\") {\r\n                this.props.history.push(\"/seller\")\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        if (nextProps.auth.isAuthenticated) {\r\n            this.props.history.push(\"\");\r\n        }\r\n\r\n        if (nextProps.errors) {\r\n            this.setState({errors: nextProps.errors});\r\n        }\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const userData = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        };\r\n        this.props.loginUser(userData, this.props.history);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({errors: \"\"})\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    render() {\r\n        const {errors} = this.state;\r\n        console.log(errors);\r\n        console.log(this.props.errors);\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Log In</h1>\r\n                            <p className=\"lead text-center\">\r\n                                Supermarket tizimiga kirish uchun username va parolni kiriting.\r\n                            </p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <TextFieldGroup\r\n                                    placeholder=\"Username\"\r\n                                    name=\"username\"\r\n                                    type=\"text\"\r\n                                    value={this.state.username}\r\n                                    onChange={this.onChange}\r\n                                    required={true}\r\n                                    error={errors.username ? errors.username : errors.message}\r\n                                />\r\n                                <TextFieldGroup\r\n                                    placeholder=\"Password\"\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    value={this.state.password}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.password}\r\n                                    required={true}\r\n                                />\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    loginUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {loginUser}\r\n)(Login);\r\n","import axios from \"axios\";\r\nimport {GET_ERRORS, GET_PRODUCT, GET_PRODUCTS} from \"./types\";\r\nimport {getProductTax} from \"./taxActions\";\r\n\r\nexport const getProductWithTerm = (term) => dispatch => {\r\n    axios.get(\"/api/products/search/name?name=\" + term)\r\n        .then(res => {\r\n            console.log(res)\r\n            dispatch({\r\n                type: GET_PRODUCTS,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {message: \"Something is wrong!!!\"}\r\n        }))\r\n}\r\nexport const getProduct = (page = 0) => dispatch => {\r\n    axios.get(\"/api/products?page=\" + page + \"&sort=name\")\r\n        .then(res => dispatch({\r\n            type: GET_PRODUCTS,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {message: \"Something is wrong!!!\"}\r\n        }))\r\n}\r\nexport const deleteProduct = (id) => dispatch => {\r\n    axios.delete(\"/api/products/\" + id)\r\n        .then(() => dispatch(getProduct()))\r\n        .catch(err => dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {message: \"Something is wrong!!!\"}\r\n        }))\r\n}\r\nexport const getOneProduct = (id) => dispatch => {\r\n    axios.get(\"/api/products/\" + id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_PRODUCT,\r\n                payload: res.data\r\n            })\r\n            let href = res.data._links.billingPrices.href;\r\n\r\n            dispatch(getProductTax(href.substring(21)))\r\n        })\r\n        .catch(err => dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {message: \"Something is wrong!!!\"}\r\n        }))\r\n}\r\nexport const updateProduct = (id, update, history) => dispatch => {\r\n    axios.put(\"/api/products/\" + id, update).then(() => {\r\n        dispatch(getProduct())\r\n        history.push(\"/product\")\r\n    })\r\n        .catch(err => dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {message: \"Something is wrong!!!\"}\r\n        }))\r\n}\r\nexport const addProduct = (newProduct, history) => dispatch => {\r\n    axios.post(\"/api/products\", newProduct)\r\n        .then(() => {\r\n            dispatch(getProduct())\r\n            history.push(\"/product\")\r\n        })\r\n        .catch(err => dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {message: \"Something is wrong!!!\"}\r\n        }))\r\n}","export default __webpack_public_path__ + \"static/media/icon.48cbd82a.png\";","import React, {PureComponent} from \"react\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport img from \"./icon.png\"\r\n\r\nexport class ComponentToPrint extends PureComponent {\r\n    render() {\r\n        let orders = this.props.list;\r\n        let summ = this.props.summ;\r\n        console.log(orders)\r\n        return (\r\n            <div className={\"container invoice\"}>\r\n                <div className=\"row\">\r\n                    <div className=\"invoice-header col-md-8 offset-q\">\r\n\r\n                        <h2 className={\"invoice-header\"}><img src={img} className={\"img-fluid\"} alt=\"icon\"/>Supermarket\r\n                        </h2>\r\n\r\n                        <h3>Chek yaratilgan sana: {new Date().toLocaleString()} </h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                        <TableContainer component={Paper}>\r\n                            <Table className={\"table\"} aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>Mahulot nomi</TableCell>\r\n                                        <TableCell align=\"right\">Mahulot narxi</TableCell>\r\n                                        <TableCell align=\"right\">Umumiy narxi</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {\r\n                                        orders.map((order, index) => (\r\n                                            <TableRow key={order.product.id}>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {order.product.name}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">{order.product.price} so`m</TableCell>\r\n                                                <TableCell\r\n                                                    align=\"right\">{order.product.price} * {order.quantity} = {(order.product.price * order.quantity).toFixed(2)} so`m</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    <TableRow key={'dd'}><TableCell component=\"th\" scope=\"row\">\r\n                                        Jami:\r\n                                    </TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\"/>\r\n                                        <TableCell component=\"th\" scope=\"row \" align=\"right\">\r\n                                            {summ} so`m\r\n                                        </TableCell></TableRow>\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProductWithTerm} from \"../../actions/productActions\";\r\nimport isEmpty from \"../../validation/is-empty\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {getInvoice} from \"../../actions/orderAction\";\r\nimport {ComponentToPrint} from \"./ComponentToPrint\";\r\nimport ReactToPrint, {PrintContextConsumer} from \"react-to-print\";\r\n\r\n\r\nclass SellerView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products: \"\",\r\n            product: \"\",\r\n            term: \"\",\r\n            orders: [],\r\n            show: false,\r\n            quantity: 0.0,\r\n            summ: 0.0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {user} = this.props.auth;\r\n        if (user.role[0].roleName !== \"ROLE_SELLER\") {\r\n            this.props.history.push(\"/login\")\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    search() {\r\n        this.props.getProductWithTerm(this.state.term);\r\n    }\r\n\r\n    onClickProduct(product) {\r\n\r\n        this.setState({product: product, show: true})\r\n\r\n    }\r\n\r\n    onQuantityChange(e) {\r\n\r\n        this.setState({[e.target.name]: parseFloat(e.target.value)});\r\n        console.log(this.state)\r\n    }\r\n\r\n    addToOrder() {\r\n        const quantity = this.state.quantity;\r\n        if (quantity > 0.0) {\r\n            let order = {\r\n                product: this.state.product,\r\n                quantity: quantity\r\n            }\r\n            let orders = this.state.orders;\r\n            orders.push(order)\r\n            let summ = parseFloat(this.state.summ) + order.product.price * order.quantity\r\n            this.setState({orders: orders, summ: summ})\r\n        }\r\n    }\r\n\r\n    onDeleteOrder(index, order) {\r\n        let orders = this.state.orders;\r\n        orders.splice(index, 1)\r\n        let summ = this.state.summ - order.product.price * order.quantity\r\n        this.setState({orders: orders, summ: summ})\r\n\r\n    }\r\n\r\n    print(f) {\r\n\r\n        console.log(this.state)\r\n        console.log(this.state.orders)\r\n        let orders = this.state.orders;\r\n        let orderDto = []\r\n        orders.forEach(order => orderDto.push({productId: order.product.id, amount: order.quantity}))\r\n        this.props.getInvoice(orderDto)\r\n        f()\r\n\r\n    }\r\n\r\n\r\n    clear() {\r\n        this.setState({\r\n            products: \"\",\r\n            product: \"\",\r\n            term: \"\",\r\n            orders: [],\r\n            show: false,\r\n            quantity: 0.0,\r\n            summ: 0\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        const orders = this.state.orders;\r\n        const {products} = this.props.product;\r\n        let findItems = \"\"\r\n        if (!isEmpty(products)) {\r\n            findItems = products._embedded.products.map(p => (\r\n                    <button key={p.id} className=\"btn btn-block\"\r\n                            onClick={e => this.onClickProduct(p)}> {p.name}</button>\r\n                )\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"row\">\r\n                    <div className={\"col-md-4\"}>\r\n                        <div className={\"d-none\"}>\r\n                            <ComponentToPrint list={this.state.orders} summ={this.state.summ}\r\n                                              ref={el => (this.componentRef = el)}/></div>\r\n                        <button className={\"btn btn-block\"} onClick={event => this.clear()}>\r\n                            Tozlash\r\n                        </button>\r\n                        <TextField\r\n                            name={\"term\"}\r\n                            id=\"standard-select-currency\"\r\n                            value={this.state.term ? this.state.term : \"\"}\r\n                            onChange={event => this.handleChange(event)}\r\n\r\n                        >\r\n                        </TextField>\r\n                        <IconButton type=\"submit\" aria-label=\"search\">\r\n                            <SearchIcon onClick={event => this.search()}/>\r\n                        </IconButton>\r\n                        {findItems}\r\n                        {this.state.show ? (<div><TextField\r\n                            type={\"number\"}\r\n                            step=\"0.01\"\r\n                            name={\"quantity\"}\r\n                            id={\"quantity\"}\r\n                            value={this.state.quantity}\r\n                            onChange={event => this.onQuantityChange(event)}\r\n                        >\r\n                        </TextField>\r\n                            <Button className={\"btn-block mt-2\"} onClick={event => this.addToOrder()}\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\">Qo`shish</Button>\r\n\r\n                        </div>) : \"\"}\r\n                    </div>\r\n                    <div className={\"col-md-8\"}>\r\n                        <div>\r\n                            {orders.length > 0 ? (\r\n                                <ReactToPrint content={() => this.componentRef}>\r\n                                    <PrintContextConsumer>\r\n                                        {({handlePrint}) => (\r\n                                            <Button className={\"btn-block mb-2\"}\r\n                                                    onClick={event => this.print(handlePrint)} variant=\"contained\"\r\n                                                    color=\"primary\">Print</Button>\r\n                                        )}\r\n                                    </PrintContextConsumer>\r\n                                </ReactToPrint>) : \"\"}\r\n\r\n                            <TableContainer component={Paper}>\r\n                                <Table aria-label=\"simple table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Mahulot nomi</TableCell>\r\n                                            <TableCell align=\"right\">Mahulot narxi</TableCell>\r\n                                            <TableCell align=\"right\">Umumiy narxi</TableCell>\r\n                                            <TableCell align=\"right\"/>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {\r\n\r\n                                            orders.map((order, index) => (\r\n                                                <TableRow key={order.product.id}>\r\n                                                    <TableCell component=\"th\" scope=\"row\">\r\n                                                        {order.product.name}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"right\">{order.product.price} so`m</TableCell>\r\n                                                    <TableCell\r\n                                                        align=\"right\">{order.product.price} * {order.quantity} = {(order.product.price * order.quantity).toFixed(2)} so`m</TableCell>\r\n                                                    <TableCell> <Button\r\n                                                        variant=\"contained\"\r\n                                                        color=\"secondary\"\r\n                                                        onClick={event => this.onDeleteOrder(index, order)}\r\n                                                        startIcon={<DeleteIcon/>}\r\n                                                    >\r\n                                                        Delete\r\n                                                    </Button></TableCell>\r\n                                                </TableRow>\r\n                                            ))}\r\n                                        <TableRow key={'21321342141'}><TableCell component=\"th\" scope=\"row\">\r\n                                            Jami:\r\n                                        </TableCell>\r\n                                            <TableCell component=\"th\" scope=\"row\"> </TableCell>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {this.state.summ} so`m\r\n                                            </TableCell></TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSellerView.propTypes = {\r\n    product: PropTypes.object.isRequired,\r\n    file: PropTypes.object.isRequired,\r\n    getInvoice: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStatetoProps = state => ({\r\n    product: state.product,\r\n    file: state.file,\r\n    auth: state.auth\r\n});\r\nexport default connect(\r\n    mapStatetoProps,\r\n    {getProductWithTerm, getInvoice}\r\n)(SellerView);\r\n","import axios from \"axios\";\r\nimport {GET_FILE, GET_ORDERS} from \"./types\";\r\n\r\nexport const getInvoice = (order) => dispatch => {\r\n    axios.post(\"/api/orders\", order)\r\n        .then(res => {\r\n            console.log(res)\r\n            dispatch({\r\n                type: GET_FILE,\r\n                payload: res.data\r\n            })\r\n\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\nexport const getBilling = (dates) => dispatch => {\r\n    axios.post(\"/api/orders/billing\", dates)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ORDERS,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n\t<Route\r\n\t\t{...rest}\r\n\t\trender={props =>\r\n\t\t\tauth.isAuthenticated === true ? (\r\n\t\t\t\t<Component {...props} />\r\n\t\t\t) : (\r\n\t\t\t\t<Redirect to=\"/login\" />\r\n\t\t\t)\r\n\t\t}\r\n\t/>\r\n);\r\nPrivateRoute.propTypes = {\r\n\tauth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n\tauth: state.auth\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {deleteProduct, getProduct} from \"../../actions/productActions\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport isEmpty from \"../../validation/is-empty\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nclass Product extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            page: 1\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getProduct(this.state.page - 1)\r\n    }\r\n\r\n    onDeleteProduct(id) {\r\n        this.props.deleteProduct(id)\r\n    }\r\n\r\n    handleChange = (event, value) => {\r\n        this.setState({pape: value});\r\n        this.props.getProduct(value - 1)\r\n    };\r\n\r\n    render() {\r\n        const {products} = this.props.product\r\n        let items;\r\n        if (!isEmpty(products)) {\r\n            items = products._embedded.products.map((row) => (\r\n                <TableRow key={row.id}>\r\n                    <TableCell>\r\n                        {row.id}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                        {row.name}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{row.info}</TableCell>\r\n                    <TableCell align=\"right\">{row.price}</TableCell>\r\n                    <TableCell align=\"right\"><Button variant=\"contained\" color=\"primary\"\r\n                                                     component=\"span\">\r\n                        <Link className={\"button-link\"} to={\"/product/\" + row.id}>O`zgartish</Link>\r\n                    </Button></TableCell>\r\n                    <TableCell align=\"right\"> <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={event => this.onDeleteProduct(row.id)}\r\n                        startIcon={<DeleteIcon/>}\r\n                    >\r\n                        O`chirish\r\n                    </Button></TableCell>\r\n                </TableRow>\r\n            ))\r\n        }\r\n        return (\r\n            <div>\r\n                <Button className=\"btn-block\" variant=\"contained\" color=\"primary\"\r\n                        component=\"span\"><Link className={\"button-link\"} to={\"/addProduct\"}>Mahsulot\r\n                    qo`shish</Link></Button>\r\n                <TableContainer component={Paper}>\r\n                    <Table aria-label=\"caption table\">\r\n                        <caption><Pagination defaultValue={this.state.page} onChange={this.handleChange}\r\n                                             count={isEmpty(products) ? 0 : products.page.totalPages}/>\r\n                        </caption>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell lign=\"right\">Id</TableCell>\r\n                                <TableCell align=\"right\">Nomi</TableCell>\r\n                                <TableCell align=\"right\">Qo`shimcha ma'lumot</TableCell>\r\n                                <TableCell align=\"right\">Narxi</TableCell>\r\n                                <TableCell align=\"right\"/>\r\n                                <TableCell align=\"right\"/>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {items}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProduct.propTypes = {\r\n    product: PropTypes.object.isRequired,\r\n    getProduct: PropTypes.func.isRequired,\r\n    deleteProduct: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    product: state.product\r\n\r\n});\r\nexport default connect(mapStateToProps, {getProduct, deleteProduct})(Product);","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {getOneProduct, updateProduct} from \"../../actions/productActions\";\r\nimport {getTax} from \"../../actions/taxActions\";\r\nimport TextFieldGroup from \"../comman/TextFieldGroup\";\r\n\r\nclass UpdateProduct extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: \"\",\r\n            id: \"\",\r\n            type: \"\",\r\n            info: \"\",\r\n            billingPrices: [],\r\n            discount: 0.0,\r\n            price: 0.0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getOneProduct(this.props.match.params.id);\r\n        this.props.getTax()\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        let product = nextProps.product.product\r\n        this.state = {\r\n            name: product.name,\r\n            id: product.id,\r\n            type: product.type,\r\n            info: product.info,\r\n            billingPrices: product.billingPrices,\r\n            discount: product.discount,\r\n            price: product.price\r\n        }\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const updateProduct = {...this.state};\r\n        updateProduct.id = this.props.match.params.id;\r\n        updateProduct.price = parseFloat(updateProduct.price)\r\n        updateProduct.discount = parseFloat(updateProduct.discount)\r\n\r\n        this.props.updateProduct(this.props.match.params.id, updateProduct, this.props.history);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        return (\r\n            <div>\r\n                <h1 className=\"my-4\">Mahulotni o`zgartirishi</h1>\r\n                <form onSubmit={event => this.onSubmit(event)}>\r\n                    <TextFieldGroup\r\n                        placeholder=\"Mahsulot nomi\"\r\n                        name=\"name\"\r\n                        required={true}\r\n                        value={this.state.name}\r\n                        onChange={(e) => this.onChange(e)}\r\n                    />\r\n                    <TextFieldGroup\r\n                        placeholder=\"Mahulot haqida qisqach\"\r\n                        name=\"info\"\r\n                        required={true}\r\n                        value={this.state.info}\r\n                        onChange={(e) => this.onChange(e)}\r\n                    />\r\n                    <TextFieldGroup\r\n                        placeholder=\"Mahulot narxi\"\r\n                        name=\"price\"\r\n                        required={true}\r\n                        type={\"number\"}\r\n                        value={this.state.price}\r\n                        onChange={(e) => this.onChange(e)}\r\n                    />\r\n                    <TextFieldGroup\r\n                        placeholder=\"Mahulot o`lchov turi\"\r\n                        name=\"type\"\r\n                        required={true}\r\n                        value={this.state.type}\r\n                        onChange={(e) => this.onChange(e)}\r\n                    />\r\n                    <TextFieldGroup\r\n                        placeholder=\"Mahulotga chegirma\"\r\n                        name=\"discount\"\r\n                        required={true}\r\n                        type={\"number\"}\r\n                        value={this.state.discount}\r\n                        onChange={(e) => this.onChange(e)}\r\n                    />\r\n                    <input type={\"submit\"} className={\"btn btn-block\"} value={\"O`zartish\"}/>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUpdateProduct.propTypes = {\r\n    product: PropTypes.object.isRequired,\r\n    tax: PropTypes.object.isRequired,\r\n    getOneProduct: PropTypes.func.isRequired,\r\n    getTax: PropTypes.func.isRequired,\r\n    updateProduct: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    product: state.product\r\n\r\n});\r\nexport default connect(mapStateToProps, {getOneProduct, getTax, updateProduct})(UpdateProduct);","import axios from \"axios\";\r\nimport {GET_ERRORS, GET_PRODUCT_TAX, GET_TAX} from \"./types\";\r\n\r\nexport const getTax = () => dispatch => {\r\n    axios.get(\"/api/billingPrice\")\r\n        .then(res => dispatch({\r\n            type: GET_TAX,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {message: \"Something is wrong!!!\"}\r\n        }))\r\n}\r\nexport const getProductTax = (uri) => dispatch => {\r\n    axios.get(uri)\r\n        .then(res => {\r\n            console.log(res.data)\r\n            dispatch({\r\n                type: GET_PRODUCT_TAX,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {message: \"Something is wrong!!!\"}\r\n        }))\r\n}","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport TextFieldGroup from \"../comman/TextFieldGroup\";\r\nimport {connect} from \"react-redux\";\r\nimport {addProduct} from \"../../actions/productActions\";\r\n\r\nclass AddProduct extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: \"\",\r\n            id: \"\",\r\n            type: \"\",\r\n            info: \"\",\r\n            billingPrices: [],\r\n            discount: 0.0,\r\n            price: 0.0\r\n        }\r\n    }\r\n\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const newProduct = {...this.state};\r\n        newProduct.price = parseFloat(newProduct.price)\r\n        newProduct.discount = parseFloat(newProduct.discount)\r\n        this.props.addProduct(newProduct, this.props.history);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        return (\r\n            <div>\r\n                <h1 className=\"my-4\">Mahulot qo`shish</h1>\r\n                <form onSubmit={event => this.onSubmit(event)}>\r\n                    <TextFieldGroup\r\n                        placeholder=\"Mahsulot nomi\"\r\n                        name=\"name\"\r\n                        required={true}\r\n                        value={this.state.name}\r\n                        onChange={(e) => this.onChange(e)}\r\n                    />\r\n                    <TextFieldGroup\r\n                        placeholder=\"Mahulot haqida qisqach\"\r\n                        name=\"info\"\r\n                        required={true}\r\n                        value={this.state.info}\r\n                        onChange={(e) => this.onChange(e)}\r\n                    />\r\n                    <TextFieldGroup\r\n                        placeholder=\"Mahulot narxi\"\r\n                        name=\"price\"\r\n                        required={true}\r\n                        type={\"number\"}\r\n                        value={this.state.price}\r\n                        onChange={(e) => this.onChange(e)}\r\n                    />\r\n                    <TextFieldGroup\r\n                        placeholder=\"Mahulot o`lchov turi\"\r\n                        name=\"type\"\r\n                        required={true}\r\n                        value={this.state.type}\r\n                        onChange={(e) => this.onChange(e)}\r\n                    />\r\n                    <TextFieldGroup\r\n                        placeholder=\"Mahulotga chegirma\"\r\n                        name=\"discount\"\r\n                        required={true}\r\n                        type={\"number\"}\r\n                        value={this.state.discount}\r\n                        onChange={(e) => this.onChange(e)}\r\n                    />\r\n                    <input type={\"submit\"} className={\"btn btn-block\"} value={\"Qo`shish\"}/>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAddProduct.propTypes = {\r\n    addProduct: PropTypes.func.isRequired\r\n}\r\nexport default connect(null, {addProduct})(AddProduct)","import React, {Component} from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {getBilling} from \"../../actions/orderAction\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport isEmpty from \"../../validation/is-empty\";\r\nimport Moment from \"react-moment\";\r\nclass Billing extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            start: new Date().toISOString().substring(0, 10),\r\n            end: new Date().toISOString().substring(0, 10)\r\n\r\n        }\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        let dates = {start: this.state.start, end: this.state.end}\r\n        console.log(dates)\r\n        this.props.getBilling(dates)\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    render() {\r\n        const {orders} = this.props.order\r\n        let items\r\n        if (!isEmpty(orders)) {\r\n            items = orders.orders.map(order => (<TableRow key={order.id}>\r\n                <TableCell lign=\"right\">{order.id}</TableCell>\r\n                <TableCell align=\"right\">{order.product.name}</TableCell>\r\n                <TableCell align=\"right\">{order.product.info}</TableCell>\r\n                <TableCell align=\"right\"><Moment format=\"YYYY/MM/DD\">{order.createAt}</Moment></TableCell>\r\n            </TableRow>))\r\n        }\r\n        return (\r\n            <divx>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md\">\r\n                        <h1>Xaridlar haqida hisobot</h1>\r\n                        <form onSubmit={e => this.onSubmit(e)}>\r\n                            <TextField\r\n                                name={\"start\"}\r\n                                id=\"date\"\r\n                                label=\"Boshlang`ich vaqt\"\r\n                                type=\"date\"\r\n                                defaultValue={this.state.start}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                onChange={event => this.onChange(event)}\r\n                            />\r\n                            <TextField\r\n                                id=\"date\"\r\n                                label=\"Tugash vaqti vaqt\"\r\n                                type=\"date\"\r\n                                name={\"end\"}\r\n                                defaultValue={this.state.end}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                onChange={event => this.onChange(event)}\r\n                            />\r\n                            <input type={\"submit\"} className={\"my-2 btn btn-block billing\"} value={\"Hisobot olish\"}/>\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md\">\r\n                        <h4>Jami foyda: {isEmpty(orders) ? 0 : orders.profit}</h4>\r\n                        <TableContainer component={Paper}>\r\n                            <Table aria-label=\"caption table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell lign=\"right\">Id</TableCell>\r\n                                        <TableCell align=\"right\">Nomi</TableCell>\r\n                                        <TableCell align=\"right\">Qo`shimcha ma'lumot</TableCell>\r\n                                        <TableCell align=\"right\">Sotib olingan vaqt</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {items}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </div>\r\n                </div>\r\n            </divx>\r\n        );\r\n    }\r\n}\r\n\r\nBilling.propTypes = {\r\n    order: PropTypes.object.isRequired,\r\n    getBilling: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    order: state.order\r\n});\r\nexport default connect(mapStateToProps, {getBilling})(Billing);","import './App.css';\nimport setAuthToken from \"./utils/setAuthToken\";\nimport store from \"./store\";\nimport jwt_decode from \"jwt-decode\";\nimport {clearCurrentProfile, logoutUser, setCurrentUser} from \"./actions/authActions\";\nimport Navbar from \"./components/layout/Navbar\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\n\nimport Login from \"./components/auth/Login\";\nimport React from \"react\";\nimport SellerView from \"./components/seller/SellerView\";\nimport PrivateRoute from \"./components/comman/PrivateRoute\";\nimport Product from \"./components/product/Product\";\nimport UpdateProduct from \"./components/product/UpdateProduct\";\nimport AddProduct from \"./components/product/AddProduct\";\nimport Order from \"./components/billing/Billing\";\n\n// Check for token\nif (localStorage.jwtToken) {\n    // Set auth token header auth\n    setAuthToken(localStorage.jwtToken);\n    // Decode token and get user info and exp\n    const decoded = jwt_decode(localStorage.jwtToken);\n    // Set user and isAuthenticated\n    store.dispatch(setCurrentUser(decoded));\n\n    // Check for expired token\n    const currentTime = Date.now() / 1000;\n    if (decoded.exp < currentTime) {\n        // Logout user\n        store.dispatch(logoutUser());\n        // Clear current Profile\n        store.dispatch(clearCurrentProfile());\n        // Redirect to login\n        window.location.href = \"/login\";\n    }\n}\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <Router>\n                <div className=\"App\">\n                    <Navbar/>\n                    <div className={\"container\"}>\n\n                        <Route exact path=\"/\" component={Login}/>\n                        <Route exact path=\"/login\" component={Login}/>\n                        <Switch>\n                            <PrivateRoute\n                                exact\n                                path=\"/seller\" component={SellerView}\n                            />\n                        </Switch>\n                        <Switch>\n                            <PrivateRoute\n                                exact\n                                path=\"/product\"\n                                component={Product}\n                            />\n                        </Switch>\n                        <Switch>\n                            <PrivateRoute\n                                exact\n                                path=\"/product/:id\"\n                                component={UpdateProduct}\n                            />\n                        </Switch>\n                        <Switch>\n                            <PrivateRoute\n                                exact\n                                path=\"/addProduct\"\n                                component={AddProduct}\n                            />\n                        </Switch>\n                        <Switch>\n                            <PrivateRoute\n                                exact\n                                path=\"/billing\"\n                                component={Order}\n                            />\n                        </Switch>\n                    </div>\n                </div>\n            </Router></Provider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}